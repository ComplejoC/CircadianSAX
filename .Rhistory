MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize3, AlfaSize4,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize3, AlfaSize5,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize3, AlfaSize6,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize3, AlfaSize7,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize4, AlfaSize3,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize4, AlfaSize4,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize4, AlfaSize5,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize4, AlfaSize6,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize4, AlfaSize7,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize6, AlfaSize6,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize6, AlfaSize7,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize8, AlfaSize3,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize8, AlfaSize3,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize8, AlfaSize4,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize8, AlfaSize5,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
```{r}
```{r}
```{r}
```{r}
```{r}
```{r, Bag of Words}
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize8, AlfaSize5,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
```{r}
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize8, AlfaSize6,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize8, AlfaSize7,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize12, AlfaSize4,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize12, AlfaSize5,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize12, AlfaSize6,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize12, AlfaSize5,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize12, AlfaSize7,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize24, AlfaSize4,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize24, AlfaSize5,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize24, AlfaSize6,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
for (i in 1:ncol(BeeMonitors) ) {
x <- manyseries_to_wordbag(IndividualGenerator(BeeMonitors[,i]), sizeOFword, PAsize24, AlfaSize7,
nr_strategy = " ", n_threshold = 0.01)
MonitorWordBag <- x
MonitorList[i] <- list(MonitorWordBag)
}
names(MonitorList) <- name
weightedMonitors <- bags_to_tfidf(MonitorList)
head(weightedMonitors)
set.seed(100)
ranMemb <- sample(1:ncol(weightedMonitors[,-1]), ncol(weightedMonitors[,-1])* 0.9)
WeightMatrix <- t(weightedMonitors[,-1])
train <- WeightMatrix[ranMemb,]
test <- WeightMatrix[-ranMemb,]
TainLabs <- Classifications$Class[ranMemb]
TestLabs <- Classifications$Class[-ranMemb]
pre <- knn(train, test, cl = TainLabs, k = 3)
confusionMatrix(data = pre, reference = as.factor(TestLabs), mode = "prec_recall")
